[{"content":"导语 果壳的校园网不给直接内网连远程桌面，感觉是因为划的子网之间不能互相通信，不知道是深澜故意的还是不小心的。todesk自然是可以，但是感觉免费的todesk画质略输一筹的同时延迟也有点小高。于是想到用frp的内网穿透来搞p2p的远程桌面。\n操作 实际上还是挺简单的，为数不多的坑是网上的教程都还是ini格式，但是在现在的版本里已经转为了toml、yaml等，而且参数好像也有些变化。\n去github下载frp的releas\n服务端 在你的服务器上装frps，并且配置toml文件，下载的frps.toml已经基本上写好了，基本啥也不用改，只要把最后的插件注释掉（或者你也可以把插件装了用）\n1 2 3 4 5 6 7 8 9 10 11 #[[httpPlugins]] #name = \u0026#34;user-manager\u0026#34; #addr = \u0026#34;127.0.0.1:9000\u0026#34; #path = \u0026#34;/handler\u0026#34; #ops = [\u0026#34;Login\u0026#34;] #[[httpPlugins]] #name = \u0026#34;port-manager\u0026#34; #addr = \u0026#34;127.0.0.1:9001\u0026#34; #path = \u0026#34;/handler\u0026#34; #ops = [\u0026#34;NewProxy\u0026#34;] 再改一下auth.token，这个token是你的frpc也要配置成一样的，相当于server对client的认证。\n1 auth.token = \u0026#34;hsijdfhsjdhf\u0026#34; # 这个感觉可以随便写，多复杂都行，反正你能连上你的服务器就能查 然后再改一改web界面的用户名密码端口啥的或者直接把web也注释了\n1 2 3 4 webServer.addr = \u0026#34;0.0.0.0\u0026#34; webServer.port = 7500 webServer.user = \u0026#34;dgsdgfsdfs\u0026#34; webServer.password = \u0026#34;dweqweas\u0026#34; 然后启动时一定要用-c指定toml配置文件，否则我也不知道他默认找的哪里的配置文件\n客户端 这里使用了xtcp的代理协议来进行p2p的内网穿透，如果想用其他方法可以参考官方文档（？是吗）\n在被控端和控制端都装上对应平台的frpc，并且配置frpc.toml\n配置frps的地址端口和token\n1 2 3 serverAddr = \u0026#34;1.1.1.1\u0026#34; serverPort = 7000 auth.token = \u0026#34;asfggsaddasd\u0026#34; # 这里要和服务端配的一样 把下面哪些示例配置全都注释掉，然后写上下面的内容\n1 2 3 4 5 6 7 [[proxies]] name = \u0026#34;rdesk\u0026#34; type = \u0026#34;xtcp\u0026#34; localIP = \u0026#34;127.0.0.1\u0026#34; # 本机 localPort = 3389 # 远程桌面连接 role = \u0026#34;server\u0026#34; secretKey = \u0026#34;akjndsghnkjadsfjh\u0026#34; 如果你的被控端的frpc设置开了web，那你应该可以再web界面看到你的xtcp的连接\n对了你还可以再你的frps和frpc里都指定一个user，这样你的proxy的name就会变成user.name的形式，这也就使你可以在server端配置多用户（指直接管name叫做aaa.xxx而不配置frps的user）\n同时在控制的机器那边也装上frpc，配置frps的地址端口和token\n1 2 3 serverAddr = \u0026#34;1.1.1.1\u0026#34; serverPort = 7000 auth.token = \u0026#34;asfggsaddasd\u0026#34; # 这里要和服务端配的一样 然后再加上\n1 2 3 4 5 6 7 [[visitors]] name = \u0026#34;rdesk_visitor\u0026#34; type = \u0026#34;xtcp\u0026#34; serverName = \u0026#34;rdesk\u0026#34; # 这里要和上面的name一致 secretKey = \u0026#34;akjndsghnkjadsfjh\u0026#34; # 这里要和上面的secretkey一致 bindAddr = \u0026#34;127.0.0.1\u0026#34; # 本机的ip地址 bindPort = 8000 然后使用frpc的同时也要用-c来指定配置文件\n./frpc.exe -c ./frpc.toml\nvisitors是在web里看不见的，看不到不要觉得奇怪。\n如果在server上可以看到都连上了，直接mstsc连就行了，连127.0.0.1:8000（也就是你在visitor里设置的地址端口）（这里是把log指向了console，所以可以直接看）\nwindwos防火墙会弹，同意了就完事了\n使用systemd让frps挂在后台 直接参考https://gofrp.org/zh-cn/docs/setup/systemd/\n","date":"2023-10-16T14:10:06+08:00","permalink":"https://pillar23.github.io/p/frp%E5%AE%9E%E7%8E%B0%E9%9A%A7%E9%81%93%E7%A9%BF%E9%80%8F%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/","title":"Frp实现隧道穿透远程桌面"},{"content":"First take 旧的博客忘了同步，导致换了电脑之后source找不到了（哭哭 于是整了个新博客儿，采用小号githubpage+hugo的解决方法 当成一个新的云笔记吧，不过其实也搞了本地md+github的方案，但是肯定没有静态博客看着爽了，整，都可以整！ 顺便给旧的hexo博客指路https://blog.pillar.fun\n","date":"2023-10-03T17:54:20+08:00","permalink":"https://pillar23.github.io/p/first_blog/","title":"First_blog"}]